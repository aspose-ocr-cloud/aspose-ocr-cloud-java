/*
 * Aspose OCR Cloud 5.0 API
 * Aspose OCR Cloud 5.0 API
 *
 * The version of the OpenAPI document: 5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package Aspose.OCR.Cloud.SDK.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Result document type for OCR process
 */
@JsonAdapter(ResultType.Adapter.class)
public enum ResultType {
  
  TEXT("Text"),
  
  PDF("Pdf"),
  
  TEXTANDPDF("TextAndPdf"),
  
  HOCR("Hocr"),
  
  TEXTANDHOCR("TextAndHocr"),
  
  PDFANDHOCR("PdfAndHocr"),
  
  TEXTANDPDFANDHOCR("TextAndPdfAndHocr"),
  
  IMAGEPNG("ImagePNG");

  private String value;

  ResultType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static ResultType fromValue(String value) {
    for (ResultType b : ResultType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<ResultType> {
    @Override
    public void write(final JsonWriter jsonWriter, final ResultType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public ResultType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return ResultType.fromValue(value);
    }
  }
}

